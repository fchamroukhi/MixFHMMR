clear all 
close all;
clc;

%%% the data %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% load donnees;load donnees2006_2
% load X;load labels;
% classe1 = find(labels==1);
% load X;
% load X2005;
% load X2006_1;
% load X2006_2;
% load X2007_1;
% load X2007_2;

% load X_neurocmp; X = X_neurocmp;
% ind = [1:2 100:101];data = X(ind,3:end-1);
%%%%
% x1 = [normrnd(10,1,20,2);normrnd(7,1,30,2)]';%normrnd(3,1,60,2)]';
% x2 = [normrnd(8,1,40,3); normrnd(11,1,10,3)]';%normrnd(10,1,100,3)]';%normrnd(10,1,30,1)]';
% x3 = [normrnd(8,1,30,3);normrnd(14,1,20,3)]';%normrnd(7,1,80,3)]';
%  data = [x1 ; x2  ;x3];

% % %%%%
load ./data/waveform;
n = 15;  klas= [ones(n,1);2*ones(n,1);3*ones(n,1)];
data = [waveform.clas1(1:n,:) ; waveform.clas2(1:n,:) ;waveform.clas3(1:n,:)];


% % load X2005; data = X2005;
% % load X2006_1; data = X2006_1;
% load X2006_2_HMM; data = squeeze(X2006_2_HMM)';
% % load X2007_1; data = X2007_1;


%load X_clustering; data = X_clustering;

% satdata = importdata('npfda-sat.dat'); data = satdata(1:100,:);
%%%
load simulated_data.mat
data = Y;

[n, m]=size(data);

% Model specification

G = 3;% number of clusters
K = 3;% number of regimes/states
p = 1;% degree of the polynomial regressors
  

% variance_type = 'common';
variance_type = 'free';
 
ordered_sates = 1;% binary
total_EM_tries = 1;
max_iter_EM = 1000;
init_kmeans = 1;
threshold = 1e-6;
verbose = 1; 


mixFHMMR =  learn_MixFHMMR_EM(data, G, K, p, ...
    variance_type, ordered_sates, total_EM_tries, max_iter_EM, init_kmeans, threshold, verbose);
 
% 
show_MixFHMMR_results(data, mixFHMMR)


 






